from dotenv import load_dotenv
import os

import google.generativeai as genai

PROMPT1 = '''Generate a challenging crossword puzzle on the topic of "'''
PROMPT2 = '''" trivia.'''
RULES = ''' The following are instructions for the format and rules to follow:
 1. Generate 10 ANSWER/CLUE pairs in total.
 2. Format each ANSWER/CLUE pair like "ANSWER - CLUE" with different ANSWER/CLUE pairs separated by newlines. Add no other characters to the formatting.
 3. Each ANSWER should be a single word, not a phrase, and not a sentence, and not multiple words.
 4. Each CLUE should be a phrase or a sentence
 5. The ANSWER must not appear in the CLUE.
 6. Do not repeat the same ANSWER twice.'''
EXAMPLES = ''' Here are some GOOD examples of ANSWER/CLUE pairs if the topic was "Harry Potter". These should be generated by the model:
 DIAGON - A street in London where wizards shop
 ACCIO - A spell used to summon objects
 NIMBUS - Harry Potter's first broomstick
 DEATHEATER - A follower of Lord Voldemort
 HEDWIG - Harry Potter's owl
 POLYJUICE - A potion that allows someone to transform into someone else
 DRACO - The arrogant and jealous son of Lucius Malfoy
 EXPELLIARMUS - A disarming charm
 RIDDLE - The true name of Lord Voldemort
 OWL - The mail delivery system used at Hogwarts'''

class Gemini:
    def __init__(
            self,
            generation_config={
                "temperature": 0.95,
            },
        ):
        self.generation_config = generation_config
        load_dotenv()
        genai.configure(api_key=os.environ.get("GOOGLE_API_KEY"))
        self.model = genai.GenerativeModel(model_name='gemini-pro', generation_config=self.generation_config)

    def generate_words_clues(self, topic):
        prompt = PROMPT1 + topic + PROMPT2 + RULES + EXAMPLES
        response = self.model.generate_content(prompt)
        return response.text
        